<!-- Inner build file for a module in the NIFTi system -->
<project name="planning_roma" default="compile" basedir=".">
	<property name="projectroot.dir" value="${basedir}/../.." />
	<property file="${projectroot.dir}/build.properties" />

	<path id="build.classpath">
		<pathelement path="${ice.jar}" />
		<pathelement path="${cast.jar}" />
		<pathelement path="${log4j.jar}" />
	</path>

	<!-- Controls what is compiled -->
	<property name="src.dir" value="./src/java" />
	<property name="slice.dir" value="./src/slice" />
	<property name="generated.dir" value="./src-generated/java" />

	<!-- Includes the slice2java task from Ice. Requires ant-ice.jar to be in your classpath -->
	<taskdef name="slice2java" classname="Slice2JavaTask">
	</taskdef>


	<!-- =================================================================== -->
	<!-- Preparation                                                         -->
	<!-- =================================================================== -->
	<target name="prepare" description="planning_roma-specific init">
		<mkdir dir="${output.dir}" />
		<mkdir dir="${generated.dir}" />
		<tstamp/>
	</target>


	<!-- =================================================================== -->
	<!-- Source generation                                                   -->
	<!-- =================================================================== -->
	<target name="slice" depends="prepare" description="generates source from slice">
		<slice2java tie="true" outputdir="${generated.dir}">
			<fileset dir="${slice.dir}" includes="planning_roma.ice,robot_status.ice,topograph.ice,robot_position.ice" />
			<includepath>
				<pathelement path="${slice.dir}" />
				<pathelement path="${castslice.dir}" />
				<pathelement path="${navigationslice.dir}" />
				<pathelement path="${ice.slice.dir}" />				
			</includepath>
		</slice2java>
	</target>


	<!-- =================================================================== -->
	<!-- Expand libraries                                                    -->
	<!-- =================================================================== -->

	<target name="expandlibs" depends="prepare" if="build.planning_roma_sa">
		<echo message="expanding external libraries for planning_roma to output/classes" />
		<!--unzip dest="${output.dir}" src="./lib/example.jar" /-->
	</target>


	<!-- =================================================================== -->
	<!-- slice file compilation                                              -->
	<!-- =================================================================== -->
	<target name="compile-slice" depends="slice" description="compiles autogenerated classes">
		<javac srcdir="${generated.dir}" destdir="${output.dir}" debug="${debug}" deprecation="${deprecation}" optimize="${optimize}" 				debuglevel="lines,vars,source">
			<classpath refid="build.classpath" />
		</javac>
	</target>


	<!-- =================================================================== -->
	<!-- Basic compilation                                                   -->
	<!-- =================================================================== -->
	<target name="compile" depends="expandlibs,compile-slice" description="compiles the source code" if="build.planning_roma_sa">
		<javac srcdir="${src.dir}" destdir="${output.dir}" debug="${debug}" deprecation="${deprecation}" optimize="${optimize}" debuglevel="lines,vars,source">
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<!-- =================================================================== -->
	<!-- Cleanup                                                             -->
	<!-- =================================================================== -->
	<target name="clean">
		<delete file="${src.dir}/.depend" />
		<delete dir="${generated.dir}" />
	</target>

</project>
