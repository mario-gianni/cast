<!-- Inner build file for a module in the NIFTi CAST system -->
<project name="sa.mapping" default="compile" basedir=".">
	
	<property name="projectroot.dir" value="${basedir}/../.." />
	<property file="${projectroot.dir}/build.properties" />

        <!-- =================================================================== -->
        <!-- Add JAR files to classpath                                          -->
        <!-- =================================================================== -->
        <path id="build.classpath">
          <fileset dir="lib">
            <include name="**/*.jar"/>
          </fileset>
          <pathelement path="${ice.jar}"/>
         <pathelement path="${cast.jar}"/>
	 </path>

	<!-- Controls where the output goes -->
	<property name="output.dir" value="../../output/classes" />

	<!-- Controls what is compiled -->
	<property name="generated.dir" value="./src-generated/java" />
	<property name="src.dir" value="./src/java" />
	<property name="slice.dir" value="./src/slice" />

	<!-- Includes the slice2java task from Ice. Requires ant-ice.jar to be in your classpath -->
	<taskdef name="slice2java" classname="Slice2JavaTask"/>

	
	<!-- =================================================================== -->
	<!-- Preparation                                                         -->
	<!-- =================================================================== -->
	<target name="prepare"  description="any project-specific init">
		<mkdir dir="${output.dir}"/>
		<mkdir dir="${generated.dir}" />
	</target>


	<!-- =================================================================== -->
 	<!-- Expand libraries                                                    -->
	<!-- =================================================================== -->
	<target name="expandlibs" depends="prepare" if="build.mapping_sa">
	    <echo message="Expanding external libraries for mapping.sa to output/classes"/>
	    <unzip dest="${output.dir}" src="./lib/trove-2.1.0.jar"/>
	    <unzip dest="${output.dir}" src="./lib/hfc.jar"/>
	</target>

	<!-- =================================================================== -->
	<!-- Source generation                                                   -->
	<!-- =================================================================== -->
	<target name="slice" depends="prepare" description="generates source from slice">
		<slice2java tie="true" outputdir="${generated.dir}">
			<fileset dir="${slice.dir}" includes="**/*.ice"/>
			<includepath> 
				<pathelement path="${slice.dir}"/> 
				<pathelement path="${castslice.dir}"/> 
				<pathelement path="${ice.slice.dir}"/> 
			</includepath>
		</slice2java>
	</target>

	<!-- =================================================================== -->
	<!-- slice file compilation                                              -->
	<!-- =================================================================== -->
	<target name="compile-slice" depends="slice" description="compiles autogenerated classes">
		<javac srcdir="${generated.dir}" destdir="${output.dir}" debug="${debug}" deprecation="${deprecation}" optimize="${optimize}" debuglevel="lines,vars,source">
			<classpath refid="build.classpath" />
		</javac>
	</target>


	
	<!-- =================================================================== -->
	<!-- Basic compilation                                                   -->
	<!-- =================================================================== -->
	<target name="compile" depends="expandlibs,compile-slice" description="compiles the source code" if="build.mapping_sa">
		<javac srcdir="${src.dir}" destdir="${output.dir}" debug="${debug}" deprecation="${deprecation}" optimize="${optimize}" debuglevel="lines,vars,source">
			<classpath refid="build.classpath" />
		</javac>
	</target>

	<!-- =================================================================== -->
	<!-- Cleanup                                                             -->
	<!-- =================================================================== -->
	<target name="clean">
		<delete file="${src.dir}/.depend" />
		<delete dir="${generated.dir}" />
	</target>

</project>
